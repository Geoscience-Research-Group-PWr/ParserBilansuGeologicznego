import unittest
import pymongo
from bson import ObjectId

from Database1 import Database # testy sie zepsuly to w teorii powinien być temporary fix, pewnie zostanie na stałe

class DBTestCase(unittest.TestCase):

    def test_name_search(self):
        db=Database()
        maxyear = 0
        minyear = 10000
        r1 = db.search_by_name("Górka Lubartowska",'2010','2015')
        r2 = db.search_by_name("Czeszów")
        r3 = db.search_by_name("")
        for items in r1:
            if int(items['Year']) >= maxyear:
                maxyear = int(items['Year'])
            if int(items['Year']) <= minyear:
                minyear = int(items['Year'])
        self.assertEqual(r1,[{'_id': ObjectId('660f1249e59ff5d144a6d9e7'), 'Name': 'Górka Lubartowska', 'Year': '2010', 'Type': 'BURSZTYNY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '1 088', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f124ae4d2a2dbf7034464'), 'Name': 'Górka Lubartowska', 'Year': '2012', 'Type': 'BURSZTYNY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '1 088', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f124adf74c1126280df31'), 'Name': 'Górka Lubartowska', 'Year': '2015', 'Type': 'BURSZTYNY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '1 088', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f124abee1883e29a57d3e'), 'Name': 'Górka Lubartowska', 'Year': '2013', 'Type': 'BURSZTYNY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '1 088', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f124a3626cf532f25b389'), 'Name': 'Górka Lubartowska', 'Year': '2011', 'Type': 'BURSZTYNY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '1 088', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f124aa801a9cfc3eb2fe9'), 'Name': 'Górka Lubartowska', 'Year': '2014', 'Type': 'BURSZTYNY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '1 088', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f130ddf74c1126280e476'), 'Name': 'Górka Lubartowska', 'Year': '2015', 'Type': 'PIASKI FORMIERSKIE', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '10 363.00', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f1312bee1883e29a58282'), 'Name': 'Górka Lubartowska', 'Year': '2013', 'Type': 'PIASKI FORMIERSKIE', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '10 363', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f1313e4d2a2dbf703499b'), 'Name': 'Górka Lubartowska', 'Year': '2012', 'Type': 'PIASKI FORMIERSKIE', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '10 363', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f132ca801a9cfc3eb35cc'), 'Name': 'Górka Lubartowska', 'Year': '2014', 'Type': 'PIASKI FORMIERSKIE', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '10 363', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f13b7e59ff5d144a6e3af'), 'Name': 'Górka Lubartowska', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '102 412', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f13d3df74c1126280e9cf'), 'Name': 'Górka Lubartowska', 'Year': '2015', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '102 412', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f13d9bee1883e29a587c3'), 'Name': 'Górka Lubartowska', 'Year': '2013', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '102 412', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f13db3626cf532f25bdaa'), 'Name': 'Górka Lubartowska', 'Year': '2011', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '102 412', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f13dce4d2a2dbf7034ec3'), 'Name': 'Górka Lubartowska', 'Year': '2012', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '102 412', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f13f8a801a9cfc3eb3b20'), 'Name': 'Górka Lubartowska', 'Year': '2014', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '102 412', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}])
        self.assertEqual(type(r1),list)
        self.assertEqual(type(r1[0]),dict)
        self.assertLessEqual(maxyear,2015)
        self.assertGreaterEqual(minyear,2010)
        self.assertNotEqual(r2,[])
        self.assertEqual(r3,[])

    def test_type_search(self):
        db = Database()
        maxyear = 0
        minyear = 10000
        r1 = db.search_by_type("ŻWIRKI FILTRACYJNE",'2021','2021')
        r2 = db.search_by_type("ŻWIRKI FILTRACYJNE")
        r3 = db.search_by_type("")
        for items in r1:
            if int(items['Year']) >= maxyear:
                maxyear = int(items['Year'])
            if int(items['Year']) <= minyear:
                minyear = int(items['Year'])
        self.assertEqual(r1,[{'_id': ObjectId('660f1f13d6f8c7ba90e730bf'), 'Name': 'Nowy Dwór Wejherowski', 'Year': '2021', 'Type': 'ŻWIRKI FILTRACYJNE', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '101', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'wejherowski'}}, {'_id': ObjectId('660f1f13d6f8c7ba90e730c0'), 'Name': 'Panoszów', 'Year': '2021', 'Type': 'ŻWIRKI FILTRACYJNE', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '172', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubliniecki'}}])
        self.assertEqual(type(r1), list)
        self.assertEqual(type(r1[0]), dict)
        self.assertLessEqual(maxyear, 2021)
        self.assertGreaterEqual(minyear, 2021)
        self.assertNotEqual(r2, [])
        self.assertEqual(r3, [])
    def test_county_search(self):
        db = Database()
        minyear = 10000
        maxyear = 0
        r1 = db.search_by_county('lubański','2010','2010')
        for items in r1:
            if int(items['Year']) >= maxyear:
                maxyear = int(items['Year'])
            if int(items['Year']) <= minyear:
                minyear = int(items['Year'])
        self.assertEqual(r1,[{'_id': ObjectId('660f1273e59ff5d144a6db08'), 'Name': 'Nawojów Śląski', 'Year': '2010', 'Type': 'GIPS I ANHYDRYT', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '\n2 119', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1280e59ff5d144a6db5b'), 'Name': 'Grabiszyce Dolne', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '424', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1280e59ff5d144a6db5e'), 'Name': 'Jałowiec', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '-', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1280e59ff5d144a6db61'), 'Name': 'Józef', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '1 745', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1282e59ff5d144a6db68'), 'Name': 'Księginki', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '4 134', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1282e59ff5d144a6db69'), 'Name': 'Księginki I', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '\n8 202', 'Zasoby przemyslowe': '8 202', 'Wydobycie': '69', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1282e59ff5d144a6db6a'), 'Name': 'Księginki-Północ', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '19 891', 'Zasoby przemyslowe': '16 232', 'Wydobycie': '377', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1282e59ff5d144a6db6c'), 'Name': 'Leśna-Brzozy', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '2 536', 'Zasoby przemyslowe': '6 665', 'Wydobycie': '398', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1282e59ff5d144a6db6d'), 'Name': 'Liściasta Góra', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '\n18 780', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1283e59ff5d144a6db72'), 'Name': 'Miłoszów', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': '\nZ', 'Zasoby wydobywalne bilansowe': '4 779', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1285e59ff5d144a6db7f'), 'Name': '\nUniegoszcz (zarej.)', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '20', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f129ee59ff5d144a6dc2b'), 'Name': 'Stankowice4', 'Year': '2010', 'Type': 'KAMIENIE ŁAMANE I BLOCZNE', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '47 484', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1305e59ff5d144a6dee8'), 'Name': 'Nawojów-Rzeczka', 'Year': '2010', 'Type': 'KWARYCTY OGNIOTRWAŁE', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '\n10', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1323e59ff5d144a6dfb7'), 'Name': 'Kościelnik*', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '127', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f132de59ff5d144a6dff8'), 'Name': 'Nawojów Łużycki*', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '326', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1330e59ff5d144a6e00f'), 'Name': 'Olszyna Średnia**', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': '\nZ', 'Zasoby wydobywalne bilansowe': '34', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1337e59ff5d144a6e040'), 'Name': 'Radostów Średni', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '-', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1337e59ff5d144a6e041'), 'Name': 'Radostów Średni I*', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '167', 'Zasoby przemyslowe': '167', 'Wydobycie': '35', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1337e59ff5d144a6e042'), 'Name': '\nRadostów Średni II*', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'T', 'Zasoby wydobywalne bilansowe': '473', 'Zasoby przemyslowe': '473', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f1338e59ff5d144a6e043'), 'Name': 'Radostów Średni III', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '991', 'Zasoby przemyslowe': '991', 'Wydobycie': '13', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f133fe59ff5d144a6e073'), 'Name': 'Stankowice*', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '23', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17b7e59ff5d144a6ff26'), 'Name': 'Czerniawa-Zdrój*', 'Year': '2010', 'Type': 'SOLANKI, WODY LECZNICZE I TERMALNE', 'More': {'Stan': 'Ls', 'Zasoby wydobywalne bilansowe': '-', 'Zasoby przemyslowe': '7.88', 'Wydobycie': '20.00', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17b9e59ff5d144a6ff34'), 'Name': 'Świeradów-Zdrój*', 'Year': '2010', 'Type': 'SOLANKI, WODY LECZNICZE I TERMALNE', 'More': {'Stan': 'LzLs', 'Zasoby wydobywalne bilansowe': '-', 'Zasoby przemyslowe': '19.97', 'Wydobycie': '9 108.00', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17c0e59ff5d144a6ff63'), 'Name': 'Czerniawa-Zdrój*', 'Year': '2010', 'Type': 'SOLANKI, WODY LECZNICZE I TERMALNE', 'More': {'Stan': 'Ls', 'Zasoby wydobywalne bilansowe': '-', 'Zasoby przemyslowe': '7.88', 'Wydobycie': '20.00', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17c2e59ff5d144a6ff72'), 'Name': 'Świeradów-Zdrój*', 'Year': '2010', 'Type': 'SOLANKI, WODY LECZNICZE I TERMALNE', 'More': {'Stan': 'LzLs', 'Zasoby wydobywalne bilansowe': '-', 'Zasoby przemyslowe': '19.97', 'Wydobycie': '9 108.00', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17d2e59ff5d144a6ffe0'), 'Name': 'Kościelnik I', 'Year': '2010', 'Type': 'SUROWCE ILASTE CERAMIKI BUDOWLANEJ', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '6', 'Zasoby przemyslowe': '\n-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17d2e59ff5d144a6ffe1'), 'Name': 'Kościelnik II', 'Year': '2010', 'Type': 'SUROWCE ILASTE CERAMIKI BUDOWLANEJ', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '4', 'Zasoby przemyslowe': '2', 'Wydobycie': '0', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17d2e59ff5d144a6ffe2'), 'Name': 'Kościelnik III', 'Year': '2010', 'Type': 'SUROWCE ILASTE CERAMIKI BUDOWLANEJ', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '4', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17d4e59ff5d144a6ffed'), 'Name': 'Olszyna Lubańska', 'Year': '2010', 'Type': 'SUROWCE ILASTE CERAMIKI BUDOWLANEJ', 'More': {'Stan': 'Z', 'Zasoby wydobywalne bilansowe': '504', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17d6e59ff5d144a6fff7'), 'Name': 'Radostów Dolny', 'Year': '2010', 'Type': 'SUROWCE ILASTE CERAMIKI BUDOWLANEJ', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '1 415', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubański'}}, {'_id': ObjectId('660f17d6e59ff5d144a6fffb'), 'Name': '\nSłowiany', 'Year': '2010', 'Type': 'SUROWCE ILASTE CERAMIKI BUDOWLANEJ', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '3 254', 'Zasoby przemyslowe': '3 159', 'Wydobycie': '2', 'Powiat': 'lubański'}}])
        self.assertEqual(maxyear,2010)
        self.assertEqual(minyear,2010)

    def test_statistics(self):
        db = Database()
        r1 = db.statistics([[{'_id': ObjectId('660f1249e59ff5d144a6d9e7'), 'Name': 'Górka Lubartowska', 'Year': '2010', 'Type': 'BURSZTYNY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '1 088', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f124a3626cf532f25b389'), 'Name': 'Górka Lubartowska', 'Year': '2011', 'Type': 'BURSZTYNY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '1 088', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f13b7e59ff5d144a6e3af'), 'Name': 'Górka Lubartowska', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '102 412', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}, {'_id': ObjectId('660f13db3626cf532f25bdaa'), 'Name': 'Górka Lubartowska', 'Year': '2011', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'P', 'Zasoby wydobywalne bilansowe': '102 412', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'lubartowski'}}], 'Górka Lubartowska'],'2010','2011')
        r2 = db.statistics([[{'_id': ObjectId('660f1253e59ff5d144a6da30'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'GAZ ZIEMNY', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '432.23', 'Zasoby przemyslowe': '334.70', 'Wydobycie': '4.70', 'Powiat': 'milicki, oleśnicki,\ntrzebnicki'}}, {'_id': ObjectId('660f127ce59ff5d144a6db44'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'HEL', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '1.0', 'Zasoby przemyslowe': '-', 'Wydobycie': '0.01', 'Powiat': '-'}}, {'_id': ObjectId('660f1319e59ff5d144a6df73'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '43', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'trzebnicki'}}], 'Czeszów'],'2010','2010')
        self.assertEqual(r1,([2010, 2011], [0, 0], 0.0))
        self.assertEqual(r2,([2010], [4.71], 4.71))

    def test_get_data(self):
        db = Database()
        r1 = db.get_data([[{'_id': ObjectId('660f1253e59ff5d144a6da30'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'GAZ ZIEMNY', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '432.23', 'Zasoby przemyslowe': '334.70', 'Wydobycie': '4.70', 'Powiat': 'milicki, oleśnicki,\ntrzebnicki'}}, {'_id': ObjectId('660f127ce59ff5d144a6db44'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'HEL', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '1.0', 'Zasoby przemyslowe': '-', 'Wydobycie': '0.01', 'Powiat': '-'}}, {'_id': ObjectId('660f1319e59ff5d144a6df73'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '43', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'trzebnicki'}}], 'Czeszów'],['Stan', 'Zasoby wydobywalne bilansowe', 'Zasoby przemyslowe', 'Wydobycie', 'Powiat'])[0]
        r2 = db.get_data([[{'_id': ObjectId('660f1253e59ff5d144a6da30'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'GAZ ZIEMNY', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '432.23', 'Zasoby przemyslowe': '334.70', 'Wydobycie': '4.70', 'Powiat': 'milicki, oleśnicki,\ntrzebnicki'}}, {'_id': ObjectId('660f127ce59ff5d144a6db44'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'HEL', 'More': {'Stan': 'E', 'Zasoby wydobywalne bilansowe': '1.0', 'Zasoby przemyslowe': '-', 'Wydobycie': '0.01', 'Powiat': '-'}}, {'_id': ObjectId('660f1319e59ff5d144a6df73'), 'Name': 'Czeszów', 'Year': '2010', 'Type': 'PIASKI I ŻWIRY', 'More': {'Stan': 'R', 'Zasoby wydobywalne bilansowe': '43', 'Zasoby przemyslowe': '-', 'Wydobycie': '-', 'Powiat': 'trzebnicki'}}], 'Czeszów'],['Stan', 'Zasoby wydobywalne bilansowe', 'Zasoby przemyslowe', 'Wydobycie', 'Powiat'])[1]
        self.assertEqual(r1,[[('Czeszów', '2010', 'GAZ ZIEMNY', 'E', '432.23', '334.70', '4.70', 'milicki, oleśnicki,\ntrzebnicki'), ('Czeszów', '2010', 'HEL', 'E', '1.0', '-', '0.01', '-'), ('Czeszów', '2010', 'PIASKI I ŻWIRY', 'R', '43', '-', '-', 'trzebnicki')]])
        self.assertEqual(r2,[['Name', 'Year', 'Type', 'Stan', 'Zasoby wydobywalne bilansowe', 'Zasoby przemyslowe', 'Wydobycie', 'Powiat']])
if __name__ == '__main__' :
    unittest.main()